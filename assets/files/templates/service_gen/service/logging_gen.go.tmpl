// THIS FILE IS AUTOGENERATED BY kitgen DO NOT EDIT OR CHANGES WILL BE LOST
package service

import (
	"context"

	log "github.com/go-kit/kit/log"
)

type loggingMiddleware struct {
	logger log.Logger
	next   {{.Name}}Service
}

// LoggingMiddleware takes a logger as a dependency
// and returns a {{.Name}}Service Middleware.
func LoggingMiddleware(logger log.Logger) Middleware {
	return func(next {{.Name}}Service) {{.Name}}Service {
		return &loggingMiddleware{logger, next}
	}
}
{{ range .Methods }}
func (l loggingMiddleware) {{.Name}}({{$s := separator ", "}}{{ range $key, $value := .Parameters }}{{call $s}}{{lower $value.Name}} {{$value.Type}}{{end}}) ({{$s := separator ", "}}{{ range $key, $value := .Results }}{{call $s}}{{lower $value.Name}} {{$value.Type}}{{end}}) {
	defer func() {
		l.logger.Log("method", "{{.Name}}", {{serviceMethodBuildLogParams .}})
	}()
	return l.next.{{.Name}}({{$s := separator ", "}}{{ range $key, $value := .Parameters }}{{call $s}}{{lower $value.Name}}{{end}})
}
{{- end}}